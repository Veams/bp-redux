import * as Actions from './<%= filename %>.actions';
import {<%= bpName.toUpperCase() %>_INITIAL_STATE} from "./<%= filename %>.state";

export default function <%= bpName %>Reducer(state = <%= bpName.toUpperCase() %>_INITIAL_STATE, action) {
	switch (action.type) {

		case Actions.<%= bpName.toUpperCase() %>_LOAD:
			return handle<%= bpJsName %>Load(state);

		case Actions.<%= bpName.toUpperCase() %>_LOADED:
			return handle<%= bpJsName %>Loaded(state, action.payload);

		case Actions.<%= bpName.toUpperCase() %>_LOADED_FAIL:
			return handle<%= bpJsName %>LoadedFailed(state, action.payload);

		default:
			return state;
	}
}

function handle<%= bpJsName %>Load(state) {
	return {
		...state,
		fetchStatus: 'loading'
	};
}

function handle<%= bpJsName %>Loaded(state, payload) {
	return {
		...state,
		fetchStatus: 'loaded',
		entities: payload.body
	};
}

function handle<%= bpJsName %>LoadedFailed(state, payload) {
	return {
		...state,
		fetchStatus: 'failed',
		error: payload
	};
}
