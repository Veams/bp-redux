import { createSelector } from 'reselect';

/**
 * Return whole state object.
 *
 * @param state {Object} - Current store state.
 */
export const get<%= bpJsName %> = state => state.<%= bpName %>;

/**
 * Return entities by using `createSelector`.
 *
 * @param {Function} - Selector function which gets the whole slice of the state object.
 * @param {Function} - Returns entities state by using a simple arrow function.
 *
 * @return {Object}
 */
export const get<%= bpJsName %>Entities = createSelector(get<%= bpJsName %>, <%= bpName %> => <%= bpName %>.entities);

/**
 * Return entities as array by using `createSelector`.
 *
 * @param {Function} - Selector function which gets the whole slice of the state object.
 * @param {Function} - Returns entities state by using a simple arrow function.
 *
 * @return {Array}
 */
export const get<%= bpJsName %>Entities = createSelector(get<%= bpJsName %>, <%= bpName %> => Object.keys(<%= bpName %>.entities).map(key => <%= bpName %>.entities[key]));

/**
 * Return fetch status state by using `createSelector`.
 *
 * @param {Function} - Selector function which gets the whole slice of the state object.
 * @param {Function} - Returns fetch status state by using a simple arrow function.
 *
 * @return {String}
 */
export const get<%= bpJsName %>FetchStatus = createSelector(get<%= bpJsName %>, <%= bpName %> => <%= bpName %>.fetchStatus);

/**
 * Return error state by using `createSelector`.
 *
 * @param {Function} - Selector function which gets the whole slice of the state object.
 * @param {Function} - Returns error state by using a simple arrow function.
 *
 * @return {Object}
 */
export const get<%= bpJsName %>Error = createSelector(get<%= bpJsName %>, <%= bpName %> => <%= bpName %>.error);